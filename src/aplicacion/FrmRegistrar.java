/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacion;

import clases.Alumno;
import clases.Beca;
import clases.Carrera;
import clases.FormaPago;
import clases.Patrocinador;
import colaDinamica.Cola;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import utiles.Rut;

/**
 *
 * @author folke
 */
public class FrmRegistrar extends javax.swing.JFrame {
    Cola<Carrera> carreras = new Cola();
    Cola<Carrera> carrerasaux = new Cola();
    Cola<Alumno> alumnos = new Cola();
    Cola<Alumno> alumnosaux = new Cola();
    /**
     * Creates new form FrmRegistrar
     */
    public FrmRegistrar() {
        initComponents();
        this.setSize(418,620);
        this.setLocationRelativeTo(null);
        this.cboBeca.setModel(new DefaultComboBoxModel(Beca.values()));
        this.cboPatrocinador.setModel(new DefaultComboBoxModel(Patrocinador.values()));
        this.cboFormaPago.setModel(new DefaultComboBoxModel(FormaPago.values()));
        generarCarreras("carreras.txt");
        llenarComboCarrera();
    }
    
    public void generarCarreras(String archivo){
        try{
            FileReader f = new FileReader(archivo);
            Scanner sc = new Scanner(f);
            String linea, codigo, nombre, valor;
            
            while(sc.hasNextLine()){
                linea = sc.nextLine();
                String[] datos = linea.split(",");
                codigo = datos[0];
                nombre = datos[1];
                valor = datos[2];
                Carrera carrera = new Carrera(codigo, nombre, valor);
                carreras.add(carrera);
                
            }
        }
        catch(IOException ex){
            
        }
    }
    
    public void llenarComboCarrera(){
        Carrera c;
        while(!carreras.isEmpty()){
            c = carreras.remove();
            String carrera = c.getNombreCarrera().toString();
            this.cboCarrera.addItem(carrera);
            carrerasaux.add(c);
        }
        while(!carrerasaux.isEmpty()){
            c = carrerasaux.remove();
            carreras.add(c);
        }
    }
    
    public boolean alumnoExiste(){
        boolean existe = false;
        String rutAlumno = this.txtRutA.getText();
        String rut;
        Alumno a;
        
        while(!alumnos.isEmpty()){
            a = alumnos.remove();
            rut = a.getNombre();
            alumnosaux.add(a);
            if (rutAlumno.compareTo(rut) == 0){
                existe = true;
                JOptionPane.showMessageDialog(this, "Alumno ya esta registrado");
            }
        }
        while(!alumnosaux.isEmpty()){
            a = alumnosaux.remove();
            alumnos.add(a);           
        }
        return existe;
    }
    
    public boolean expresionesRegulares(){
        boolean valido = false;
        
        Pattern pMonto = Pattern.compile("([0-9]+)$");
        Matcher mMonto = pMonto.matcher(txtMonto.getText());
        boolean montoValido = mMonto.matches();
        
        Pattern pTiempo = Pattern.compile("([0-9]+)$");
        Matcher mTiempo = pTiempo.matcher(txtTiempo.getText());
        boolean tiempoValido = mTiempo.matches();
        
        if (montoValido == false && cboBeca.getSelectedItem().equals(Beca.Si)){
            JOptionPane.showMessageDialog(this, "Ingrese un monto valido");
            txtMonto.requestFocus();
            valido = false;
        }
        else if(tiempoValido == false){
            JOptionPane.showMessageDialog(this, "Ingrese un tiempo valido");
            txtTiempo.requestFocus();
            valido = false;
        }
        else if(montoValido == true && tiempoValido == true || montoValido == false && cboBeca.getSelectedItem().equals(Beca.No)){ 
            valido = true;
        }
        return valido;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboPatrocinador = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtTiempo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtRutA = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lblRutP = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblMonto = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        txtRutP = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        cboBeca = new javax.swing.JComboBox<>();
        btnCerrar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        cboCarrera = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cboFormaPago = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTRAR ALUMNO");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 30));

        jLabel2.setText("Patrocinador:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        cboPatrocinador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPatrocinadorActionPerformed(evt);
            }
        });
        getContentPane().add(cboPatrocinador, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 160, 30));

        jLabel3.setText("Forma pago:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 480, -1, 20));
        getContentPane().add(txtTiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, 160, 30));

        jLabel4.setText("Rut alumno:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));
        getContentPane().add(txtRutA, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 160, 30));

        jLabel5.setText("Nombre alumno:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, 20));

        lblRutP.setText("Rut patrocinador:");
        getContentPane().add(lblRutP, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, 20));

        jLabel7.setText("Carrera:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, 20));

        jLabel8.setText("Beca:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, 20));

        lblMonto.setText("Monto beca:");
        getContentPane().add(lblMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, -1, 20));
        getContentPane().add(txtMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, 160, 30));
        getContentPane().add(txtRutP, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 160, 30));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 160, 30));

        cboBeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBecaActionPerformed(evt);
            }
        });
        getContentPane().add(cboBeca, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 160, 30));

        btnCerrar.setText("Cerrar   ");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 530, 90, -1));

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 530, 90, -1));

        getContentPane().add(cboCarrera, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 160, 30));

        jLabel6.setText("Tiempo de proceso:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, -1, 20));

        getContentPane().add(cboFormaPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, 160, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void cboPatrocinadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPatrocinadorActionPerformed
        // TODO add your handling code here:
        if (cboPatrocinador.getSelectedItem().equals(Patrocinador.No_Tiene_Patrocinador)){
            this.txtRutP.setVisible(false);
            this.lblRutP.setVisible(false);
        }        
        if (cboPatrocinador.getSelectedItem().equals(Patrocinador.Tiene_Patrocinador)){
            this.txtRutP.setVisible(true);
            this.lblRutP.setVisible(true);
        }
    }//GEN-LAST:event_cboPatrocinadorActionPerformed

    public String codigoCarrera(){
        Carrera c;
        String codigo = "";
        while(!carreras.isEmpty()){
            c = carreras.remove();
            if(c.getNombreCarrera().equals(cboCarrera.getSelectedItem().toString())){
                codigo = c.getCodigo();
            }
            carrerasaux.add(c);
        }
        while(!carrerasaux.isEmpty()){
            c = carrerasaux.remove();
            carreras.add(c);
        }
        return codigo;
    }
    
    public boolean rutValido(){
        boolean valido = false;
        String rutA = this.txtRutA.getText();
        char a, b, c, d, e, f, g, h, dV;
        int A, B, C, D, E, F, G, H, suma, resta, Dv;
        
        if(rutA.charAt(8) == '-'){
            dV = rutA.charAt(9);
            if(dV == 'K'){               
                a = rutA.charAt(7);
                A = Character.getNumericValue(a) * 2;            
                b = rutA.charAt(6);
                B = Character.getNumericValue(b) * 3;            
                c = rutA.charAt(5);
                C = Character.getNumericValue(c) * 4;
                d = rutA.charAt(4);
                D = Character.getNumericValue(d) * 5;
                e = rutA.charAt(3);
                E = Character.getNumericValue(e) * 6;
                f = rutA.charAt(2);
                F = Character.getNumericValue(f) * 7;
                g = rutA.charAt(1);
                G = Character.getNumericValue(g) * 2;
                h = rutA.charAt(0);
                H = Character.getNumericValue(h) * 3;
                suma = A + B + C + D + E + F + G + H;
                resta = suma % 11;
                if(11 - resta == 10){
                    valido = true;
                }
            }
            else{
                Dv = Character.getNumericValue(dV);           
                a = rutA.charAt(7);
                A = Character.getNumericValue(a) * 2;            
                b = rutA.charAt(6);
                B = Character.getNumericValue(b) * 3;            
                c = rutA.charAt(5);
                C = Character.getNumericValue(c) * 4;
                d = rutA.charAt(4);
                D = Character.getNumericValue(d) * 5;
                e = rutA.charAt(3);
                E = Character.getNumericValue(e) * 6;
                f = rutA.charAt(2);
                F = Character.getNumericValue(f) * 7;
                g = rutA.charAt(1);
                G = Character.getNumericValue(g) * 2;
                h = rutA.charAt(0);
                H = Character.getNumericValue(h) * 3;
                suma = A + B + C + D + E + F + G + H;
                resta = suma % 11;
                if (11 - resta == Dv){
                    valido = true;
                }
                else if(resta == 0){
                   valido = true;
                }
                else{
                    valido = false;
                }
            }
        }
        else if(rutA.charAt(7) == '-'){
            dV = rutA.charAt(8);
            if(dV == 'K'){
                a = rutA.charAt(6);
                A = Character.getNumericValue(a) * 2;            
                b = rutA.charAt(5);
                B = Character.getNumericValue(b) * 3;            
                c = rutA.charAt(4);
                C = Character.getNumericValue(c) * 4;
                d = rutA.charAt(3);
                D = Character.getNumericValue(d) * 5;
                e = rutA.charAt(2);
                E = Character.getNumericValue(e) * 6;
                f = rutA.charAt(1);
                F = Character.getNumericValue(f) * 7;
                g = rutA.charAt(0);
                G = Character.getNumericValue(g) * 2;            
                suma = A + B + C + D + E + F + G;
                resta = suma % 11;
                if(11 - resta == 10){
                    valido = true;
                }
            }
            else{
                Dv = Character.getNumericValue(dV);
            
                a = rutA.charAt(6);
                A = Character.getNumericValue(a) * 2;            
                b = rutA.charAt(5);
                B = Character.getNumericValue(b) * 3;            
                c = rutA.charAt(4);
                C = Character.getNumericValue(c) * 4;
                d = rutA.charAt(3);
                D = Character.getNumericValue(d) * 5;
                e = rutA.charAt(2);
                E = Character.getNumericValue(e) * 6;
                f = rutA.charAt(1);
                F = Character.getNumericValue(f) * 7;
                g = rutA.charAt(0);
                G = Character.getNumericValue(g) * 2;            
                suma = A + B + C + D + E + F + G;
                resta = suma % 11;
                if (11 - resta == Dv){
                    valido = true;
                }
                else if(resta == 0){
                    valido = true;
                }
                else{
                    valido = false;
                }
            }           
        }
        return valido;
    }
    
    public boolean rutPatrocinadorValido(){
        boolean valido = false;
        String rutP = this.txtRutP.getText();
        char a, b, c, d, e, f, g, h, dV;
        int A, B, C, D, E, F, G, H, suma, resta, Dv;
        
        if(rutP.charAt(8) == '-'){
            dV = rutP.charAt(9);
            if(dV == 'K'){               
                a = rutP.charAt(7);
                A = Character.getNumericValue(a) * 2;            
                b = rutP.charAt(6);
                B = Character.getNumericValue(b) * 3;            
                c = rutP.charAt(5);
                C = Character.getNumericValue(c) * 4;
                d = rutP.charAt(4);
                D = Character.getNumericValue(d) * 5;
                e = rutP.charAt(3);
                E = Character.getNumericValue(e) * 6;
                f = rutP.charAt(2);
                F = Character.getNumericValue(f) * 7;
                g = rutP.charAt(1);
                G = Character.getNumericValue(g) * 2;
                h = rutP.charAt(0);
                H = Character.getNumericValue(h) * 3;
                suma = A + B + C + D + E + F + G + H;
                resta = suma % 11;
                if(11 - resta == 10){
                    valido = true;
                }
            }
            else{
                Dv = Character.getNumericValue(dV);           
                a = rutP.charAt(7);
                A = Character.getNumericValue(a) * 2;            
                b = rutP.charAt(6);
                B = Character.getNumericValue(b) * 3;            
                c = rutP.charAt(5);
                C = Character.getNumericValue(c) * 4;
                d = rutP.charAt(4);
                D = Character.getNumericValue(d) * 5;
                e = rutP.charAt(3);
                E = Character.getNumericValue(e) * 6;
                f = rutP.charAt(2);
                F = Character.getNumericValue(f) * 7;
                g = rutP.charAt(1);
                G = Character.getNumericValue(g) * 2;
                h = rutP.charAt(0);
                H = Character.getNumericValue(h) * 3;
                suma = A + B + C + D + E + F + G + H;
                resta = suma % 11;
                if (11 - resta == Dv){
                    valido = true;
                }
                else if(resta == 0){
                   valido = true;
                }
                else{
                    valido = false;
                }
            }
        }
        else if(rutP.charAt(7) == '-'){
            dV = rutP.charAt(8);
            if(dV == 'K'){
                a = rutP.charAt(6);
                A = Character.getNumericValue(a) * 2;            
                b = rutP.charAt(5);
                B = Character.getNumericValue(b) * 3;            
                c = rutP.charAt(4);
                C = Character.getNumericValue(c) * 4;
                d = rutP.charAt(3);
                D = Character.getNumericValue(d) * 5;
                e = rutP.charAt(2);
                E = Character.getNumericValue(e) * 6;
                f = rutP.charAt(1);
                F = Character.getNumericValue(f) * 7;
                g = rutP.charAt(0);
                G = Character.getNumericValue(g) * 2;            
                suma = A + B + C + D + E + F + G;
                resta = suma % 11;
                if(11 - resta == 10){
                    valido = true;
                }
            }
            else{
                Dv = Character.getNumericValue(dV);
            
                a = rutP.charAt(6);
                A = Character.getNumericValue(a) * 2;            
                b = rutP.charAt(5);
                B = Character.getNumericValue(b) * 3;            
                c = rutP.charAt(4);
                C = Character.getNumericValue(c) * 4;
                d = rutP.charAt(3);
                D = Character.getNumericValue(d) * 5;
                e = rutP.charAt(2);
                E = Character.getNumericValue(e) * 6;
                f = rutP.charAt(1);
                F = Character.getNumericValue(f) * 7;
                g = rutP.charAt(0);
                G = Character.getNumericValue(g) * 2;            
                suma = A + B + C + D + E + F + G;
                resta = suma % 11;
                if (11 - resta == Dv){
                    valido = true;
                }
                else if(resta == 0){
                    valido = true;
                }
                else{
                    valido = false;
                }
            }           
        }
        return valido;
    }
    
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        codigoCarrera();       
        if (alumnoExiste() == false && expresionesRegulares()){
            Rut rutA = new Rut(this.txtRutA.getText());
            Rut rut = new Rut(this.txtRutP.getText());
            if(rutValido() == true && rutPatrocinadorValido() == true){
                if (this.cboPatrocinador.getSelectedItem().equals(Patrocinador.No_Tiene_Patrocinador) && this.cboBeca.getSelectedItem().equals(Beca.Si)){   
                
                    Alumno a = new Alumno(rutA,txtNombre.getText(),cboPatrocinador.getSelectedItem().toString(),codigoCarrera().toString(),
                                          cboBeca.getSelectedItem().toString(),txtMonto.getText(),txtTiempo.getText(),cboFormaPago.getSelectedItem().toString());
                
                    a.toSave("alumnos.txt");   
                    JOptionPane.showMessageDialog(this, "Alumno fue registrado");
                }
                else if (this.cboPatrocinador.getSelectedItem().equals(Patrocinador.Tiene_Patrocinador) && this.cboBeca.getSelectedItem().equals(Beca.Si)){
                
                    Rut rutP = new Rut(txtRutP.getText());
                    Alumno a = new Alumno(rutA,txtNombre.getText(),cboPatrocinador.getSelectedItem().toString(),rutP,codigoCarrera().toString(),
                                          cboBeca.getSelectedItem().toString(),txtMonto.getText(),txtTiempo.getText(),cboFormaPago.getSelectedItem().toString());
                
                    a.toSave("alumnos.txt");
                    JOptionPane.showMessageDialog(this, "Alumno fue registrado");
                }
                else if (this.cboPatrocinador.getSelectedItem().equals(Patrocinador.No_Tiene_Patrocinador) && this.cboBeca.getSelectedItem().equals(Beca.No)){
                    
                    Alumno a = new Alumno(rutA,txtNombre.getText(),cboPatrocinador.getSelectedItem().toString(),codigoCarrera().toString(),
                                          cboBeca.getSelectedItem().toString(),txtTiempo.getText(),cboFormaPago.getSelectedItem().toString());
                
                    a.toSave("alumnos.txt");
                    JOptionPane.showMessageDialog(this, "Alumno fue registrado");
                }
                else{
                    Rut rutP = new Rut(txtRutP.getText());
                    Alumno a = new Alumno(rutA,txtNombre.getText(),cboPatrocinador.getSelectedItem().toString(),rutP,codigoCarrera().toString(),
                                          cboBeca.getSelectedItem().toString(),txtTiempo.getText(),cboFormaPago.getSelectedItem().toString());
                
                    a.toSave("alumnos.txt");
                    JOptionPane.showMessageDialog(this, "Alumno fue registrado"); 
                }
                this.lblRutP.setVisible(true);
                this.txtRutP.setVisible(true);
                this.txtRutA.setText(null);
                this.txtNombre.setText(null);
                this.txtRutP.setText(null); 
                this.txtMonto.setText(null);
                this.txtTiempo.setText(null);
            }
            else if(rutValido() == false){
                JOptionPane.showMessageDialog(this, "Rut del alumno no es valido");    
            }
            else{
                JOptionPane.showMessageDialog(this, "Rut del patrocinador no es valido");
            }
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void cboBecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBecaActionPerformed
        // TODO add your handling code here:
        if (cboBeca.getSelectedItem().equals(Beca.No)){
            this.txtMonto.setVisible(false);
            this.lblMonto.setVisible(false);
        }       
        if (cboBeca.getSelectedItem().equals(Beca.Si)){
            this.txtMonto.setVisible(true);
            this.lblMonto.setVisible(true);
        }
    }//GEN-LAST:event_cboBecaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegistrar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cboBeca;
    private javax.swing.JComboBox<String> cboCarrera;
    private javax.swing.JComboBox<String> cboFormaPago;
    private javax.swing.JComboBox<String> cboPatrocinador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblMonto;
    private javax.swing.JLabel lblRutP;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRutA;
    private javax.swing.JTextField txtRutP;
    private javax.swing.JTextField txtTiempo;
    // End of variables declaration//GEN-END:variables
}
